pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('sonarqube') // Replace with your SonarQube token ID in Jenkins credentials
    }

    stages {
        stage('Cleanup Previous Artifacts') {
            agent {
                docker {
                    image 'node:14'
                    args '-u root:root'
                }
            }
            steps {
                sh 'rm -f *.tgz'
            }
        }

        stage('Install Dependencies') {
            agent {
                docker {
                    image 'node:14'
                    args '-u root:root'
                }
            }
            steps {
                sh 'npm install'
            }
        }

        stage('SonarQube Scan') {
            agent {
                docker {
                    image 'node:14'
                    args '-u root:root'
                }
            }
            steps {
                script {
                    // Install SonarQube Scanner
                    sh 'npm install -g sonar-scanner'

                    def nodePath = sh(script: 'which node', returnStdout: true).trim()
                    // Execute SonarScanner
                    sh """
                    sonar-scanner \
                        -Dsonar.organization=marionngwa \
                        -Dsonar.projectKey=Marionngwa_nodejs \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=${SONAR_TOKEN} \
                        -Dsonar.nodejs.executable=${nodePath}
                    """
                }
            }
        }

        stage('Packaging The Artifact') {
            agent {
                docker {
                    image 'node:14'
                    args '-u root:root'
                }
            }
            steps {
                sh 'npm pack'
            }
        }

        stage('Artifact Upload') {
            agent {
                docker {
                    image 'node:14'
                    args '-u root:root'
                }
            }
            steps {
                sh '''
                curl -u admin:AP6APkHxetchhfhHqpaawMctMhu -T \
                *.tgz \
                "http://ec2-3-83-18-39.compute-1.amazonaws.com:8081/artifactory/example-repo-local/"
                '''
            }
        }
    }
}
